stages:
  - build-default
  - build-arm64
  - deploy-k3s

variables:
  DOCKER_FILE: "Dockerfile"
  DOCKER_REGISTRY: "docker.io"
  DOCKER_CLI_EXPERIMENTAL: "enabled"
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""

build-default:
  stage: build-default
  image: docker:latest
  services:
    - name: docker:dind
      alias: docker
  before_script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" $DOCKER_REGISTRY --password-stdin
  script:
    - >
      docker build
      -t index.docker.io/bbertka/stock-flask-app:latest
      -f $DOCKER_FILE .
    - docker push index.docker.io/bbertka/stock-flask-app:latest
  only:
    - main

build-arm64:
  stage: build-arm64
  image: docker:latest
  services:
    - name: docker:dind
      alias: docker
  before_script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" $DOCKER_REGISTRY --password-stdin
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes # Register QEMU as a handler for non-native architectures
    - docker buildx create --use
  script:
    - >
      docker buildx build
      --platform linux/arm64
      -t index.docker.io/bbertka/stock-flask-app-arm64:latest
      -f $DOCKER_FILE
      --push .
  only:
    - main

deploy:
  stage: deploy-k3s
  image: alpine/k8s
  script:
    - kubectl config set-cluster default-cluster --server=$KUBE_URL --insecure-skip-tls-verify=true
    - kubectl config set-credentials default-user --token=$KUBE_TOKEN
    - kubectl config set-context default --cluster=default-cluster --user=default-user --namespace=$KUBE_NAMESPACE
    - kubectl config use-context default
    - kubectl apply -f stock-flask-app-deployment.yml
  only:
    - main
