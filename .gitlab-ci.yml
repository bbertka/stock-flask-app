stages:
  - build
  - deploy

variables:
  DOCKER_FILE: "Dockerfile"
  DOCKER_REGISTRY: "docker.io"
  DOCKER_CLI_EXPERIMENTAL: "enabled"
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  DOCKER_IMAGE_NAME: "bbertka/stock-flask-app"  # Base image name
  DOCKER_BASE_TAG: "latest"  # Base tag

build-amd64:
  stage: build
  image: docker:latest
  services:
    - name: docker:dind
      alias: docker
  before_script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" $DOCKER_REGISTRY --password-stdin
  script:
    - >
      docker build
      -t $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:$DOCKER_BASE_TAG
      -f $DOCKER_FILE .
    - docker push $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:$DOCKER_BASE_TAG
  only:
    - main

build-arm64:
  stage: build
  image: docker:latest
  services:
    - name: docker:dind
      alias: docker
  before_script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" $DOCKER_REGISTRY --password-stdin
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker buildx create --use
  script:
    - >
      docker buildx build
      --platform linux/arm64
      -t $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:$DOCKER_BASE_TAG-arm64
      -f $DOCKER_FILE
      --push .
  only:
    - main

deploy-k3s:
  stage: deploy
  image: alpine/k8s:1.29.2
  script:
    - kubectl config set-cluster default-cluster --server=$KUBE_URL --insecure-skip-tls-verify=true
    - kubectl config set-credentials default-user --token=$KUBE_TOKEN
    - kubectl config set-context default --cluster=default-cluster --user=default-user --namespace=$KUBE_NAMESPACE
    - kubectl config use-context default
    - kubectl apply -f deployment.yml
    - DEPLOYMENT_NAME=$(grep 'name:' deployment.yml | awk 'NR==1{print $2}')
    - kubectl rollout restart deployment/$DEPLOYMENT_NAME -n $KUBE_NAMESPACE
  only:
    - main
